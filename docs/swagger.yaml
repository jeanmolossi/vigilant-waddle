definitions:
  adapter.RegisterStudent:
    properties:
      email:
        example: john@doe.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  httputil.PingInternalServerErr:
    properties:
      message:
        example: unexpected error
        type: string
    type: object
  httputil.PingOk:
    properties:
      message:
        example: pong
        type: string
    type: object
info:
  contact: {}
  termsOfService: github.com/jeanmolossi/vigilant-waddle/terms/
paths:
  /ping:
    get:
      consumes:
      - application/json
      description: A simple health check.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.PingOk'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.PingInternalServerErr'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/httputil.PingInternalServerErr'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/httputil.PingInternalServerErr'
      summary: Ping the server.
      tags:
      - healthcheck
  /student:
    post:
      description: Register a student
      operationId: register-student
      parameters:
      - description: Student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/adapter.RegisterStudent'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema: {}
      summary: Register a student
  /students:
    get:
      description: Get all students
      operationId: get-students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items: {}
            type: array
      summary: Get all students
securityDefinitions:
  access_token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
